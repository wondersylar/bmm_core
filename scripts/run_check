#!/bin/bash


#checkmode=$1
#blockname=$2
#yml_file=$3
#runtarget=$4

#declare -A dic
#
#dic=(
#    [uart]='design/ips/uart/uart.yml'
#    [i2c]='design/ips/i2c/i2c.yml'
#    [spi]='design/ips/spi/spi.yml'
#    [gpio]='design/ips/gpio/gpio.yml'
#    [bus]='design/ips/bus/bus.yml'
#    [top]='design/top/top.yml'
#    )
#
#yml_file="${PROJ_HOME}${dic[${blockname}]}"
#echo "====Your source file is:${yml_file}===="

echo "=============check your option================"
while getopts ":m:b:f:t:c:r:" opt; do
    case $opt in
        m)
        echo "    checkmode -m is: $OPTARG" 
        checkmode=$OPTARG ;;
        b)
        echo "    blockname -b is: $OPTARG" 
        blockname=$OPTARG ;;
        f)
        echo "    yml_file  -f is: $OPTARG"
        yml_file=$OPTARG ;;
        t)
        echo "    runtarget -t is: $OPTARG"
        runtarget=$OPTARG ;;
        c)
        echo "    clk_name  -c is: $OPTARG"
        clk_name=$OPTARG ;;
        r)
        echo "    rst_name  -r is: $OPTARG"
        rst_name=$OPTARG ;;
        ?)
        echo "*Error, no this option, please choose from [m,b,f,t,c,r] "
        echo "=============================================="
        exit 1;;
    esac
done
echo "=============================================="
flname=`echo $(basename $yml_file .yml)`



mkdir -p ${blockname}_file/filelist 
python3 filelist.py ${yml_file} ${runtarget} 
mv ${flname}.f dc_setup.setup filelist.tcl ${blockname}_file/filelist
cd ${blockname}_file


if [[ $checkmode == 'vcs' ]]; then
    if [ ! -d 'vcs' ]; then mkdir vcs; fi
    cd vcs; rm -rf *
    vcs  -full64 -sverilog +v2k\
        +libext+.v+.V+.sv+.svh \
        -kdb -lca\
        -debug_all  +nbaopt +nospecify +notimingcheck -R \
        +acc \
        +vpi \
        -assert svaext \
        +vcs+lic+wait \
        -Mdir=csrc \
        -top ${blockname} \
        -timescale=1ns/1ps \
        -P /opt/tools/synopsys/verdi_2017.12/share/PLI/VCS/linux64/novas_new_dumper.tab /opt/tools/synopsys/verdi_2017.12/share/PLI/VCS/linux64/pli.a \
        -l compile.log \
        -o simv \
        -f ../filelist/${flname}.f

elif [[ $checkmode == 'xrun' ]]; then
    if [ ! -d 'xrun' ]; then mkdir xrun; fi
    cd xrun; rm -rf * 
    xrun -64bit -licqueue -elaborate \
         -P /opt/tools/synopsys/verdi_2017.12/share/PLI/VCS/linux64/novas_new_dumper.tab /opt/tools/synopsys/verdi_2017.12/share/PLI/VCS/linux64/pli.a \
         -loadpli1 debpli:novas_pli_boot  \
         -sv -sysv_ext +.h+.sv+.svh+.svi+.pkg \
         -access +rwc \
         +sva \
         -timescale 1ns/1ps \
         -top ${blockname} \
         -l compile.log \
         -f ../filelist/${flname}.f   && xrun -R

elif [[ $checkmode == 'verdi' ]]; then
    if [ ! -d 'verdi' ]; then mkdir verdi; fi
    cd verdi; rm -rf *
    verdi -sverilog  \
          -2012 -sv +systemverilogext+.sv+.v \
          -logdir log \
          -top ${blockname} \
          -f ../filelist/${flname}.f

elif [[ $checkmode == 'spyglass' ]]; then
    if [ ! -d 'spyglass' ]; then mkdir spyglass; fi
    cd spyglass; rm -rf *
    echo "current_design \"${blockname}\"" >> ./cr_constrain.sgdc
    echo "clock -name \"${blockname}.${clk_name}\" -domain clk -tag clk" >> ./cr_constrain.sgdc
    echo "reset -name \"${blockname}.${rst_name}\" -value 0" >> ./cr_constrain.sgdc
    echo "set filelist ../filelist/${flname}.f " > ./sg_argv_set.tcl
    echo "set topname ${blockname}" >> ./sg_argv_set.tcl
    #echo "set report_path"
    sg_shell -tcl ../../scripts/sg.tcl | tee -i sg.log


elif [[ $checkmode == 'dc' ]]; then
    if [ ! -d 'dc' ]; then mkdir dc; fi
    cd dc; rm -rf *
    cp ../../scripts/.synopsys_dc.setup ./
    cp ../filelist/filelist.tcl ./
    cp ../filelist/dc_setup.setup ./
    sed -i '15 r dc_setup.setup' ./.synopsys_dc.setup
    echo "set topname ${blockname}" >> ./filelist.tcl
    dc_shell-xg-t -f ../../scripts/dc_command.tcl | tee -i dc.log
    
elif [[ $checkmode == 'jg' ]]; then
    if [ ! -d 'jg' ]; then mkdir jg; fi
    cd jg; rm -rf *
    echo "clock $clk_name" > jg_cr_set.tcl
    echo "reset {$rst_name == 1'b0}" >> jg_cr_set.tcl
    echo "set filelist ../filelist/${flname}.f " > ./jg_argv_set.tcl
    echo "set topname ${blockname}" >> ./jg_argv_set.tcl
    jg -superlint -batch ../../scripts/jg.tcl | tee -i jg.log



else
    echo "***No such mode, choose from [vcs,dc,xrun,verdi,spyglass,jg]"

fi




